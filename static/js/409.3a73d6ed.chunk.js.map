{"version":3,"file":"static/js/409.3a73d6ed.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.getIsLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilters = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilters], (contacts, filters) => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filters.toLowerCase()))\n})\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\nimport { Button, Input, FormControl, FormLabel, FormErrorMessage, Text } from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst phoneValidation = /^((\\+[1-9]{1,4}[-]*)|(\\([0-9]{2,3}\\)[-]*)|([0-9]{2,4})[-]*)*?[0-9]{3,4}?[-]*[0-9]{3,4}?$/;\n\n const SignupSchema = Yup.object().shape({\n   name: Yup.string()\n     .min(2, 'Too Short!')\n     .max(16, 'Too Long!')\n     .required('Required'),\n   number: Yup.string()\n     .max(19, 'Too Long!')\n     .matches(phoneValidation, 'Phone number is not valid, use format XX-XX-XX-XXX-XXX')\n     .required('Required'),\n });\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n    return (\n        <Formik\n            initialValues={{\n            name: '',\n            number: '',\n            }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          const contactExists = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n            if (contactExists) {\n              alert(`${values.name} is already in your PhoneBook`);\n            } else {\n              const name = values.name;\n              const number = values.number;\n              dispatch(addContact({name, number}));\n            }\n            actions.resetForm()\n      }}\n      >\n        {(formikProps) => (\n          <>\n            <Text fontFamily='heading' color='primary.100' fontSize='20px' textAlign='center' mb='30px'>Add a new contact</Text>\n          <form onSubmit={formikProps.handleSubmit}>\n            <FormControl mb='40px' id=\"name\" isRequired>\n              <FormLabel fontFamily='mono' color='secondary.100' fontSize='18px'>Name</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={formikProps.values.name}\n                onChange={formikProps.handleChange}\n                _focus={{\n                    color: 'secondary.100',\n                    borderColor: 'primary.100',\n              }}\n              />\n              <FormErrorMessage>{formikProps.errors.name}</FormErrorMessage>\n          </FormControl>\n          <FormControl mb='40px' id=\"number\" isRequired>\n            <FormLabel fontFamily='mono' color='secondary.100' fontSize='18px'>Number</FormLabel>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={formikProps.values.number}\n              onChange={formikProps.handleChange}\n              _focus={{\n                    color: 'secondary.100',\n                    borderColor: 'primary.100',\n              }}\n            />\n            <FormErrorMessage>{formikProps.errors.number}</FormErrorMessage>\n          </FormControl>\n          <Button color='secondary.50'\n            bg='primary.100'\n            type=\"submit\"\n            display='flex'\n            mx='auto'\n            _hover={{\n                color: 'secondary.50',\n                backgroundColor: 'primary.50',\n            }}><AddIcon mr='10px'/> Add contact</Button>\n        </form>\n          </>\n        \n        )}\n\n    </Formik>\n    )\n}","\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\"; \nimport {\n  List,\n  ListItem,\n  Text,\n  Button,\n  Container\n} from '@chakra-ui/react'\nimport { DeleteIcon,PhoneIcon } from '@chakra-ui/icons'\n\nexport const ContactList = () => {\n\n    const filteredContacts = useSelector(selectVisibleContacts)\n    const dispatch = useDispatch();\n\n    return (\n        <List spacing={3}>\n            {filteredContacts.map(obj => (\n                <ListItem display='flex' justifyContent='space-between' mb='20px' key={obj.id}>\n                    <Container display='flex' alignItems='center'>\n                        <PhoneIcon mr='12px'/>\n                        <Text fontFamily='mono' fontSize='20px' fontWeight='bold'>{obj.name}:</Text>\n                        <Text fontFamily='mono'>{obj.number}</Text>\n                    </Container>\n                        \n                    <Button type=\"button\" color='secondary.50'\n                        bg='primary.100'\n                        _hover={{\n                            color: 'secondary.50',\n                            backgroundColor: 'primary.50',\n                        }} onClick = {() => dispatch(deleteContact(obj.id))} ><DeleteIcon mr='10px'/> Delete</Button>\n                </ListItem>\n            ))\n            }\n        </List>\n    )\n}\n\n","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/filtersSlice\";\nimport { Input, Text, Box } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const handleFilterChange = text => dispatch(setFilter(text));\n\n    return (\n        <Box mt='40px' mb='40px'>\n            <Text fontFamily='heading' color='primary.100' fontSize='20px'  mb='20px'><SearchIcon mr='10px'/>Find contacts by name</Text>\n            <Input type=\"text\" onChange={evt=> handleFilterChange(evt.target.value)}/>\n        </Box>\n    )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Box p='40px'>\n            <Text fontFamily='heading' color='primary.100' fontSize='30px' textAlign='center' mb='30px'>PhoneBook</Text>\n            <ContactForm />\n            <Filter />\n            <div>{isLoading && 'Request in progress...' }</div>\n            <ContactList/>\n        </Box>\n    )\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","getIsLoading","selectVisibleContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","SignupSchema","Yup","shape","min","max","required","number","matches","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","alert","concat","addContact","resetForm","children","formikProps","_jsxs","_Fragment","Text","fontFamily","color","fontSize","textAlign","mb","handleSubmit","FormControl","id","isRequired","FormLabel","Input","type","value","onChange","handleChange","_focus","borderColor","FormErrorMessage","errors","Button","bg","display","mx","_hover","backgroundColor","AddIcon","mr","ContactList","filteredContacts","List","spacing","map","obj","ListItem","justifyContent","Container","alignItems","PhoneIcon","fontWeight","onClick","deleteContact","DeleteIcon","Filter","Box","mt","SearchIcon","evt","text","target","setFilter","Contacts","isLoading","useEffect","fetchContacts","p"],"sourceRoot":""}